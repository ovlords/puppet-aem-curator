#!/usr/bin/env bash
set -o nounset
set -o errexit

if [ "$#" -ne 1 ]; then
  echo 'Usage: ./content-sync-vlt.sh <source_stack_prefix> <component> <aem_port>'
  exit 1
fi

PATH=<%= $aem_tools_env_path %>

source_stack_prefix="$1"
component="$2"
aem_port="$3"
aem_username=admin
aem_password=$(<%= $aem_password_retrieval_command %>)

# translate puppet exit code to follow convention
translate_exit_code() {

  exit_code="$1"
  if [ "$exit_code" -eq 0 ] || [ "$exit_code" -eq 2 ]; then
    exit_code=0
  else
    exit "$exit_code"
  fi

  return "$exit_code"
}

set +o errexit

cd <%= $base_dir %>/aem-aws-stack-provisioner/

# get the IP of AEM instance to sync content from
aws_region=$(facter aws_region)
source_ip=$(aws ec2 describe-instances
  --filters Name=tag:StackPrefix,Values=${source_stack_prefix} Name=tag:Component,Values=${component} \
  --region ${aws_region} \
  --query Reservations[0].NetworkInterfaces[0].PrivateIpAddresses \
  -- output text
)

instance_id=$(facter ec2_metadata.instance-id)
security_groups=$(aws ec2 describe-instances --instance-ids $instance_id --query Reservations[*].Instances[*].SecurityGroups[*].GroupId --output text)

FACTER_aem_username="${aem_username}" \
FACTER_aem_password="${aem_password}" \
FACTER_source_ip="${source_ip}" \
FACTER_component="${component}" \
FACTER_aem_port="${aem_port}" \
FACTER_recursive="${recursive}" \
FACTER_batch_size="${batch_size}" \
FACTER_update="${update}" \
FACTER_newer_only="${newer_only}" \
FACTER_exclude_path="${exclude_path}" \
FACTER_content_sync_path="${content_sync_path}" \
FACTER_security_groups="${security_groups}" \
/opt/puppetlabs/bin/puppet apply \
  --debug \
  --detailed-exitcodes \
  --modulepath modules \
  --hiera_config conf/hiera.yaml \
  --execute "include aem_curator::action_content_sync_vlt"

translate_exit_code "$?"

